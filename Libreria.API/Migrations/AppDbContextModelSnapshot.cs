// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Libreria.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Libreria.Modelos.Autor", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Codigo"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaNacmiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaisCodigo")
                        .HasColumnType("int");

                    b.HasKey("Codigo");

                    b.HasIndex("PaisCodigo");

                    b.ToTable("Autores");
                });

            modelBuilder.Entity("Libreria.Modelos.Editorial", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Codigo"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaisCodigo")
                        .HasColumnType("int");

                    b.HasKey("Codigo");

                    b.HasIndex("PaisCodigo");

                    b.ToTable("Editoriales");
                });

            modelBuilder.Entity("Libreria.Modelos.Libro", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Codigo"));

                    b.Property<int>("AnioPublicacion")
                        .HasColumnType("int");

                    b.Property<int>("AutorCodigo")
                        .HasColumnType("int");

                    b.Property<int>("CantidadEjemplares")
                        .HasColumnType("int");

                    b.Property<int>("CantidadPaginas")
                        .HasColumnType("int");

                    b.Property<int>("EditorialCodigo")
                        .HasColumnType("int");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaisCodigo")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Codigo");

                    b.HasIndex("AutorCodigo");

                    b.HasIndex("EditorialCodigo");

                    b.HasIndex("PaisCodigo");

                    b.ToTable("Libros");
                });

            modelBuilder.Entity("Libreria.Modelos.Pais", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Codigo"));

                    b.Property<string>("Capital")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Continente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Idioma")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Moneda")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Codigo");

                    b.ToTable("Paises");
                });

            modelBuilder.Entity("Libreria.Modelos.Autor", b =>
                {
                    b.HasOne("Libreria.Modelos.Pais", "Pais")
                        .WithMany("Autores")
                        .HasForeignKey("PaisCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("Libreria.Modelos.Editorial", b =>
                {
                    b.HasOne("Libreria.Modelos.Pais", "Pais")
                        .WithMany("Editoriales")
                        .HasForeignKey("PaisCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("Libreria.Modelos.Libro", b =>
                {
                    b.HasOne("Libreria.Modelos.Autor", "Autor")
                        .WithMany("Libros")
                        .HasForeignKey("AutorCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Libreria.Modelos.Editorial", "Editorial")
                        .WithMany("Libros")
                        .HasForeignKey("EditorialCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Libreria.Modelos.Pais", "Pais")
                        .WithMany("Libros")
                        .HasForeignKey("PaisCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Autor");

                    b.Navigation("Editorial");

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("Libreria.Modelos.Autor", b =>
                {
                    b.Navigation("Libros");
                });

            modelBuilder.Entity("Libreria.Modelos.Editorial", b =>
                {
                    b.Navigation("Libros");
                });

            modelBuilder.Entity("Libreria.Modelos.Pais", b =>
                {
                    b.Navigation("Autores");

                    b.Navigation("Editoriales");

                    b.Navigation("Libros");
                });
#pragma warning restore 612, 618
        }
    }
}
